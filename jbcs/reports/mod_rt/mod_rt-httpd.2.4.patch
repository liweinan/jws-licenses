Index: mod_rt.c
===================================================================
--- mod_rt.c	(revision 11283)
+++ mod_rt.c	(working copy)
@@ -106,7 +106,11 @@
     apr_snprintf(tstr, 256, "%s %"APR_INT64_T_FMT" %"APR_INT64_T_FMT" %d %s",  
                  apr_uri_unparse(r->pool, &first->parsed_uri, 0),
                  r->request_time / 1000, apr_time_now() - r->request_time, 
+#if AP_MODULE_MAGIC_AT_LEAST(20111130,0)
+                 r->status, r->connection->client_ip);
+#else
                  r->status, r->connection->remote_ip);
+#endif
 
     return tstr;
 }
@@ -140,7 +144,11 @@
     apr_snprintf(tstr, 256, "%s %"APR_INT64_T_FMT" %"APR_INT64_T_FMT" %d %s",  
                  vhoststr + 3, apr_time_as_msec(orig_time), 
                  r->request_time - orig_time, r->status,
+#if AP_MODULE_MAGIC_AT_LEAST(20111130,0)
+                 r->connection->client_ip);
+#else
                  r->connection->remote_ip);
+#endif
 
     return tstr;
 }
@@ -155,11 +163,11 @@
     return OK;
 }
 
-static int handle_cam(include_ctx_t *ctx, apr_bucket_brigade **bb,
-                      request_rec *r, ap_filter_t *f, apr_bucket *head_ptr,
-                      apr_bucket **inserted_head)
+static apr_status_t handle_cam(include_ctx_t *ctx,
+                      ap_filter_t *f, apr_bucket_brigade *head_ptr)
 {
     apr_bucket *tmp_bucket;
+    request_rec *r = f->r;
     char *tstr = apr_palloc(r->pool, 256);
 
     /* We have to use the first request in the chain.  This ensures that the
@@ -178,14 +186,13 @@
     tmp_bucket = apr_bucket_immortal_create("<img src=\"/CAM_blank.gif?t=",
                                          strlen("<img src=\"/CAM_blank.gif?t="),
                                          r->connection->bucket_alloc);
-    APR_BUCKET_INSERT_BEFORE(head_ptr, tmp_bucket);
-    (*inserted_head) = tmp_bucket;
+    APR_BRIGADE_INSERT_HEAD(head_ptr, tmp_bucket);
 
     apr_snprintf(tstr, 256, "%"APR_INT64_T_FMT"&v=%s\"/>", r->request_time,
                  apr_uri_unparse(r->pool, &first->parsed_uri, 0));
     tmp_bucket = apr_bucket_pool_create(tstr, strlen(tstr), r->pool,
                                         r->connection->bucket_alloc);
-    APR_BUCKET_INSERT_BEFORE(head_ptr, tmp_bucket);
+    APR_BRIGADE_INSERT_HEAD(head_ptr, tmp_bucket);
     
     return 0;
 }
